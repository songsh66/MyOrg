* <2017-03-01 周三>
** TODO
- [ ] WonderBI 散点图 记录数问题
- [ ] 智问 点赞功能交接
- [ ] 
** DONE
*** 阅读
- 《我只是对人生过敏》不算很有趣，也没有太多启发性，浅尝辄止。
- 《世界简史》暂停，单纯车上阅读收获不大
*** 工作
*** 学习
* <2017-03-02 周四>
** TODO
*** 智问点赞功能：详细设计
* <2017-03-06 周一>
** Remain
*** WonderBI地图剩余问题：
- 湖北荆门市： 缝隙
- 海南省： 太小
- 新疆可克达拉市： 缝隙
- 新疆 昆玉市： 下不到数据（不解决）
- 
* <2017-03-14 周二>
** 工作记录与心得体会
- 2017-03-14 10:02:36
  前台：
  CSS：
  position：absolute的设置，需要在想要相对定位的上级模块中设置position为relative
- 2017-03-14 10:20:58
- 2017-03-14 11:27:08
  熟练使用stackoverflow，中文查了一个小时的问题，5分钟解决
- 2017-03-14 14:08:58
  screenY
         鼠标相对于显示器屏幕左上角的偏移
  
  pageY
         鼠标相对于页面左上角的偏移 (其值不会受滚动条的影响)
         IE9之下并不支持这个属性

  clientY
         鼠标相对于浏览器视口左上角的偏移
         注意clientY和pageY的区别，clientY在页面无滚动条的情况下值等同于pageY
  
  layerY
         如果元素的position样式不是默认的static,我们说这个元素具有定位属性。
         在当前触发鼠标事件的元素和它的祖先元素中找到最近的具有定位属性的元素，计算鼠标与其的偏移值，以找到元素的border的左上角的外交点作为相对点。如果找不到具有定位属性的元素，那么就相对于当前页面计算偏移，此时等同于pageY。
  
  offsetY   
 　　     IE专有的属性
         offsetY和layerY的不同在于，前者的在计算偏移值时，相对于元素的border左上角的内交点，因此当鼠标位于元素的border上时，偏移值是一个负值。 另外offsetY并不在乎触发事件的元素是否有定位属性，它总是相对于触发事件的元素来计算偏移值。
* <2017-03-17 周五>
** 学习笔记
- 2017-03-17 15:29:26
  not优先级 > and > or
- 2017-03-17 17:15:55
  python + opencv 的安装，需要安装最新版的python2以及最新版的numpy，其中numpy需要使用pip来进行安装
** 待学习内容
*** python
**** opencv实现区域截图
**** django搭建服务器
- 建立一个自己的博客
*** 书籍
**** 《数学之美》
**** 《学习openVC》
**** 《python》
*** 文学
**** 《玻璃之锤》
**** 《超越巅峰》
*** 机器学习
**** 数学相关基础内容
**** 卷积神经网络
**** LSTM神经网络
**** Linux基础
*** 娱乐
**** 电影《王者之剑》
**** 
* <2017-03-28 周二>
** 记录
*** 2017-03-28 10:29:28
html输入框，type很多，学习各种type的区别和用法
*** 2017-03-28 11:11:36
有的时候为了开发效率可以忽略一些小的性能消耗
** 待完成工作
*** 发票截图工具
- [X] 重新绑定按键事件
- [X] 放大缩小
- [X] 优化offsetX获取精度
- [X] 缩小时计算坐标系数
- [X] 文件系统的读取
- [X] 延时判定，点击不要生成框选区
- [X] 优化界面布局
- [ ] 优化双击事件
- [ ] 文字下展现
* <2017-03-29 周三>
** 待完成工作
- [X] BUG：鼠标点击框选区大小改变
- [X] 图标大小统一
- [X] 绑定模式切换快捷键 ：暂时设置为ctrl
- [X] 加深框选区的显眼程度
- [ ] BUG：文件列表有时不展现
- [ ] IMP：搭建前后台的逻辑框架
** 收获
*** HTML
关于DIV的offsetHeight与clientHeight的区别
- clientHeight
  大部分浏览器对clientHeight都无异议，认为是元素可视区域的高度，也就是说元素或窗口中可以看到内容的这个区域的高度，既然是指可看到内容的区域，滚动条不算在内。但要注意padding是算在内。其计算方式为clientHeight = topPadding + bottomPadding + height - 水平滚动条高度。
- offsetHeight
  在IE6，IE7，IE8，IE9以及最新的FF，Chrome中，对于一般元素，都是offsetHeight = padding + height + border = clientHeight + 滚动条 + 边框。
- scrollHeight
  scrollHeight的争议比较大，有些浏览器认为scrollHeight可以小于clientHeight，有些认为scrollHeight至少应该等于clientHeight。但有一点是一样的，就是scrollHeight >= topPadding + bottomPadding + 内容margin box的高度。
* <2017-03-30 四>
** 
* <2017-03-31 五>
